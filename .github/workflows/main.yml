name: Django [MAIN] CI / DEPLOY

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: self-hosted  # O runner self-hosted está no servidor de produção
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4  # Faz o checkout do código fonte

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Tests
      run: |
        source venv/bin/activate  # Ativa o ambiente virtual
        python manage.py test  # Roda os testes

        
  deploy:
    needs: test
    runs-on: self-hosted  # O runner self-hosted está no servidor de produção
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]
    env:
      branch: teste
      app: front
    defaults:
      run:
        working-directory: /home/tecnika/TK/django/main/front

    steps:
      # Deploy no servidor de produção
    - name: Finalizando servidor
      working-directory: /home/tecnika/bat
      run: sudo bash django-stop.sh $branch $app #Fecha os serviços do django

    - name: Baixando bibliotecas
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
        
    - name: Atualizando arquivos
      run: sudo git pull origin $branch
        
    - name: Copiando .env
      run: cp /home/tecnika/TK/django/env/main_front.env .env

    - name: Coletando estáticos
      run: python3 manage.py collectstatic --noinput

    - name: Reiniciando servidor
      working-directory: /home/tecnika/bat
      run: sudo bash django-reload.sh $branch $app #Reinicia o processo do django

